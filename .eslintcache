[{"/Users/jadepark/Documents/nstudying/src/index.js":"1","/Users/jadepark/Documents/nstudying/src/components/App.js":"2","/Users/jadepark/Documents/nstudying/src/components/Router.js":"3","/Users/jadepark/Documents/nstudying/src/routes/Home.js":"4","/Users/jadepark/Documents/nstudying/src/routes/Auth.js":"5","/Users/jadepark/Documents/nstudying/src/fbase.js":"6"},{"size":211,"mtime":1609117308490,"results":"7","hashOfConfig":"8"},{"size":280,"mtime":1609122072151,"results":"9","hashOfConfig":"8"},{"size":643,"mtime":1609118675284,"results":"10","hashOfConfig":"8"},{"size":86,"mtime":1609117788671,"results":"11","hashOfConfig":"8"},{"size":947,"mtime":1609123631592,"results":"12","hashOfConfig":"8"},{"size":606,"mtime":1609121581005,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1x41gh4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/jadepark/Documents/nstudying/src/index.js",[],["29","30"],"/Users/jadepark/Documents/nstudying/src/components/App.js",["31"],"import React, { useState } from 'react';\nimport AppRouter from \"components/Router\";\nimport { authService } from 'fbase';\n\nfunction App() {\n  const[isLoggedIn,setIsLoggedIn] = useState(authService.currentUser);\n  return <AppRouter isLoggedIn={isLoggedIn}/>;\n}\n\nexport default App;\n","/Users/jadepark/Documents/nstudying/src/components/Router.js",["32"],"import React, { useState } from \"react\";\n\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\n\nconst AppRouter = ({isLoggedIn}) => {\n    return(\n        <Router>\n            <Switch>\n                {isLoggedIn ? (\n                <>\n                <Route exact path=\"/\">\n                    <Home/>\n                </Route> \n                </>\n                ) : (\n                <Route exact path='/'>\n                    <Auth/>\n                </Route>\n                )}\n            </Switch>\n        </Router>\n    );\n};\nexport default AppRouter;","/Users/jadepark/Documents/nstudying/src/routes/Home.js",[],"/Users/jadepark/Documents/nstudying/src/routes/Auth.js",[],"/Users/jadepark/Documents/nstudying/src/fbase.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":6,"column":20,"nodeType":"39","messageId":"40","endLine":6,"endColumn":33},{"ruleId":"37","severity":1,"message":"41","line":1,"column":17,"nodeType":"39","messageId":"40","endLine":1,"endColumn":25},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'setIsLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]